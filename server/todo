TODO per la prossima riunione:

Le api quindi dovranno
  1. Cercare prima nel db le info richieste (usr,tw)
  2. Se non ci sono sul db
    - chiederle a twitter con anche tutte le info in più possibili
    - salvarle nel nostro db
  3. Rispondere

Quindi, divisione in 2 sotto-package principali di api:
- package che fa determinate richieste al db (ed elabora le info)
- package che fa determinate richieste a twitter (e le salva sul db)

Il package api farà da mediatore ("interfaccia i due pacchetti e converte i dati") tra i due pacchetti


al frontend ritorniamo:
- singolo Tweet
- array di Tweet
- utente di Tweet
- varie (pool,count)

MongoDb collezioni:
- Tweets
- TwUsers
- Users


oggetto che ritorniamo al frontend {
    id
    text
    timestamp
    public_metrics {like, retw...}
    media {url, width...}
    usr di tipo TwUsers
}

oggetto Tweet sul db {
    id
    text
    author_id -> id del TwUser
    public_metrics {like, retw...}
    timestamp
    media {url, width...}
}

oggetto TwUser sul db {
    id
    name
    username
    propic
    created_at and optionals
}


TODO:
Fixare server che crasha se gli arrivano troppe richieste insieme.
- [ ] Test tweet insert and find in database
- [ ] Test cache.go
- [ ] Rimuovi doppioni tra cache e risultati
