stages:
  - test
  - rate

golang-check:
  stage: test
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - go vet $(go list ./... | grep -wv utils)
    - GIN_MODE=release go test -v -coverprofile=coverage.out git.hjkl.gq/team7/twitterman/server/database git.hjkl.gq/team7/twitterman/server/api git.hjkl.gq/team7/twitterman/server/TwitterApi
  artifacts:
    paths:
      - coverage.out
    expire_in: 1 day

sonarqube-check:
  stage: rate
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: "0" # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - test-b
